class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        //vector<int> nums;
        int i,j,n,m;
        if (nums1.size()>nums2.size())
            swap(nums1,nums2);
        i=nums1.size()/2;
        //j=(nums1.size()+nums2.size()-1)/2-i;
        while(i>=0){
            j=(nums1.size()+nums2.size()-1)/2-i;
            if ((i==0 or j==nums2.size() or nums1[i-1]<nums2[j]) and (j==0 or i==nums1.size() or nums2[j-1]<nums1[i]))
                if ((nums1.size()+nums2.size())%2==0)
                    return (max(nums1[i-1],nums2[j-1])+min(nums1[i],nums2[j]))/2;
                else 
                    return min(nums1[i],nums2[j]);
            else if (nums1[i-1]>nums2[j])
                i=i-1;
            else if (nums2[j-1]>nums1[i])
                i=i+1;
        }
    
    }
};
